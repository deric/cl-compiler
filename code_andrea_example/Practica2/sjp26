

  1: PROGRAM
  2:   VARS
  3:     X INT
  4:     Y INT
  5:   ENDVARS
  6:   PROCEDURE FACT(VAL X INT, REF F INT)
  7:   VARS 
  8:     AUX INT
  9:   ENDVARS
 10:     IF X = 1 THEN
 11:       F := 1
 12:     ELSE
 13:       FACT( X-1, AUX )
 14:       F := AUX * X
 15:     ENDIF
 16:   ENDPROCEDURE
 17:   X:= 1
 18:   WHILE (X < 10) DO
 19:     FACT( X, Y )
 20:     WRITE(" El factorial de ")
 21:     WRITE(X)
 22:     WRITE(" es: ")
 23:     WRITE(Y)
 24:     WRITELN("")
 25:     X := X + 1
 26:   ENDWHILE
 27: ENDPROGRAM


 program
 | list
 | | ident(X)
 | | | int
 | | ident(Y)
 | | | int
 | list
 | | procedure
 | | | ident(FACT)
 | | | | list
 | | | | | val
 | | | | | | ident(X)
 | | | | | | int
 | | | | | ref
 | | | | | | ident(F)
 | | | | | | int
 | | | list
 | | | | ident(AUX)
 | | | | | int
 | | | list
 | | | list
 | | | | if
 | | | | | =
 | | | | | | ident(X)
 | | | | | | intconst(1)
 | | | | | list
 | | | | | | :=
 | | | | | | | ident(F)
 | | | | | | | intconst(1)
 | | | | | list
 | | | | | | (
 | | | | | | | ident(FACT)
 | | | | | | | list
 | | | | | | | | -
 | | | | | | | | | ident(X)
 | | | | | | | | | intconst(1)
 | | | | | | | | ident(AUX)
 | | | | | | :=
 | | | | | | | ident(F)
 | | | | | | | *
 | | | | | | | | ident(AUX)
 | | | | | | | | ident(X)
 | list
 | | :=
 | | | ident(X)
 | | | intconst(1)
 | | while
 | | | <
 | | | | ident(X)
 | | | | intconst(10)
 | | | list
 | | | | (
 | | | | | ident(FACT)
 | | | | | list
 | | | | | | ident(X)
 | | | | | | ident(Y)
 | | | | write
 | | | | | string(" El factorial de ")
 | | | | write
 | | | | | ident(X)
 | | | | write
 | | | | | string(" es: ")
 | | | | write
 | | | | | ident(Y)
 | | | | writeln
 | | | | | string("")
 | | | | :=
 | | | | | ident(X)
 | | | | | +
 | | | | | | ident(X)
 | | | | | | intconst(1)


Type Checking:

Generating code:
program
  parameters
    static_link
  endparameters

  variables
    _X 4
    _Y 4
  endvariables

    aload _X t0
    iload 1 t1
    stor t1 t0
  etiq while_1
    load _X t0
    iload 10 t1
    lesi t0 t1 t0
    fjmp t0 endwhile_1
    load _X t0
    pushparam t0
    aload _Y t0
    pushparam t0
    aload static_link t0
    pushparam t0
    call program_FACT
    killparam
    killparam
    killparam
    wris " El factorial de "
    load _X t0
    wrii t0
    wris " es: "
    load _Y t0
    wrii t0
    wris ""
    wrln
    aload _X t0
    load _X t1
    iload 1 t2
    addi t1 t2 t1
    stor t1 t0
    ujmp while_1
  etiq endwhile_1
    stop
endprogram

subroutine program_FACT
  parameters
    _X
    _F
    static_link
  endparameters

  variables
    _AUX 4
  endvariables

    load _X t0
    iload 1 t1
    equi t0 t1 t0
    fjmp t0 else_1
    load _F t0
    iload 1 t1
    stor t1 t0
    ujmp endif_1
  etiq else_1
    load _X t0
    iload 1 t1
    subi t0 t1 t0
    pushparam t0
    aload _AUX t0
    pushparam t0
    load static_link t0
    pushparam t0
    call program_FACT
    killparam
    killparam
    killparam
    load _F t0
    load _AUX t1
    load _X t2
    muli t1 t2 t1
    stor t1 t0
  etiq endif_1
    retu
endsubroutine

Executing code:
 El factorial de 1 es: 1
 El factorial de 2 es: 2
 El factorial de 3 es: 6
 El factorial de 4 es: 24
 El factorial de 5 es: 120
 El factorial de 6 es: 720
 El factorial de 7 es: 5040
 El factorial de 8 es: 40320
 El factorial de 9 es: 362880
