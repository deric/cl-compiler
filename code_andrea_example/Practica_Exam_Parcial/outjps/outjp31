

  1: Program
  2:   Vars
  3:     n Int
  4:   EndVars
  5:   Function fibon(Val n Int) Return Int
  6:     Vars
  7:       retvalue Int
  8:       n1 Int
  9:       n2 Int
 10:     EndVars
 11:     Procedure recfibon(Val n Int,Ref n1 Int,Ref n2 Int)
 12:       Vars
 13:         aux Int
 14:       EndVars
 15:       If n=0 Or n=1 Then  n1:=1  n2:=1
 16:       Else
 17:         recfibon(n-1,n1,n2)
 18:         aux:=n1  n1:=n2  n2:=aux+n2
 19:       EndIf
 20:     EndProcedure
 21:     recfibon(n,n1,n2)
 22:     Return n2
 23:   EndFunction
 24:   n:=1
 25:   While (n<10) Do
 26:     Write("Fibonacci(") Write(n) Write(")=") WriteLn(fibon(n))
 27:     n:=n+1
 28:   EndWhile
 29: EndProgram


 program
 | list
 | | ident(n)
 | | | int
 | list
 | | function
 | | | ident(fibon)
 | | | | list
 | | | | | val
 | | | | | | ident(n)
 | | | | | | int
 | | | | int
 | | | list
 | | | | ident(retvalue)
 | | | | | int
 | | | | ident(n1)
 | | | | | int
 | | | | ident(n2)
 | | | | | int
 | | | list
 | | | | procedure
 | | | | | ident(recfibon)
 | | | | | | list
 | | | | | | | val
 | | | | | | | | ident(n)
 | | | | | | | | int
 | | | | | | | ref
 | | | | | | | | ident(n1)
 | | | | | | | | int
 | | | | | | | ref
 | | | | | | | | ident(n2)
 | | | | | | | | int
 | | | | | list
 | | | | | | ident(aux)
 | | | | | | | int
 | | | | | list
 | | | | | list
 | | | | | | if
 | | | | | | | or
 | | | | | | | | =
 | | | | | | | | | ident(n)
 | | | | | | | | | intconst(0)
 | | | | | | | | =
 | | | | | | | | | ident(n)
 | | | | | | | | | intconst(1)
 | | | | | | | list
 | | | | | | | | :=
 | | | | | | | | | ident(n1)
 | | | | | | | | | intconst(1)
 | | | | | | | | :=
 | | | | | | | | | ident(n2)
 | | | | | | | | | intconst(1)
 | | | | | | | list
 | | | | | | | | (
 | | | | | | | | | ident(recfibon)
 | | | | | | | | | list
 | | | | | | | | | | -
 | | | | | | | | | | | ident(n)
 | | | | | | | | | | | intconst(1)
 | | | | | | | | | | ident(n1)
 | | | | | | | | | | ident(n2)
 | | | | | | | | :=
 | | | | | | | | | ident(aux)
 | | | | | | | | | ident(n1)
 | | | | | | | | :=
 | | | | | | | | | ident(n1)
 | | | | | | | | | ident(n2)
 | | | | | | | | :=
 | | | | | | | | | ident(n2)
 | | | | | | | | | +
 | | | | | | | | | | ident(aux)
 | | | | | | | | | | ident(n2)
 | | | list
 | | | | (
 | | | | | ident(recfibon)
 | | | | | list
 | | | | | | ident(n)
 | | | | | | ident(n1)
 | | | | | | ident(n2)
 | | | ident(n2)
 | list
 | | :=
 | | | ident(n)
 | | | intconst(1)
 | | while
 | | | <
 | | | | ident(n)
 | | | | intconst(10)
 | | | list
 | | | | write
 | | | | | string("Fibonacci(")
 | | | | write
 | | | | | ident(n)
 | | | | write
 | | | | | string(")=")
 | | | | writeln
 | | | | | (
 | | | | | | ident(fibon)
 | | | | | | list
 | | | | | | | ident(n)
 | | | | :=
 | | | | | ident(n)
 | | | | | +
 | | | | | | ident(n)
 | | | | | | intconst(1)


Type Checking:

Generating code:
program
  parameters
    static_link
  endparameters

  variables
    _n 4
  endvariables

    aload _n t0
    iload 1 t1
    stor t1 t0
    stop
endprogram

subroutine program_fibon
  parameters
  endparameters

  variables
  endvariables

endsubroutine

Executing code:
