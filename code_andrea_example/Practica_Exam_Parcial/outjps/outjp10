

  1: PROGRAM
  2:   VARS
  3:     x Array [5] of Bool
  4:     y Bool
  5:     b Struct
  6:         x Array [5] of Bool
  7: 	  b Struct
  8: 		c Int
  9: 		b Bool
 10: 	    EndStruct
 11:       EndStruct
 12:     c Array [0] of Struct
 13:                      c Int
 14:                      c Int
 15:                    EndStruct
 16:   ENDVARS
 17:   IF NOT x THEN
 18:     WHILE NOT 3>4 DO
 19:       IF (0>---(y+3))=b OR -b.b.b THEN
 20: 	  b.b.b:=NOT b.b.b
 21:         y:=b.b.c+x[y]
 22:       ENDIF
 23:     ENDWHILE
 24:     IF NOT -3=-3 OR (x=b.x) THEN
 25:       x[c[1].b.c]:=3+y / (3 * 4---2)
 26:     ENDIF
 27:   ELSE
 28:     y:=(3>x) OR (b=b) AND (x=b.x)
 29:     b:=NOT NOT NOT (b.b.b OR (x>c))
 30:     x[3]:=6 / 3
 31:     x[2]:=b.x[3]+c[0].c
 32:     x:=4
 33:     b[3]:=x.x
 34:   ENDIF
 35: ENDPROGRAM


 program
 | list
 | | ident(x)
 | | | array
 | | | | intconst(5)
 | | | | bool
 | | ident(y)
 | | | bool
 | | ident(b)
 | | | struct
 | | | | ident(x)
 | | | | | array
 | | | | | | intconst(5)
 | | | | | | bool
 | | | | ident(b)
 | | | | | struct
 | | | | | | ident(c)
 | | | | | | | int
 | | | | | | ident(b)
 | | | | | | | bool
 | | ident(c)
 | | | array
 | | | | intconst(0)
 | | | | struct
 | | | | | ident(c)
 | | | | | | int
 | | | | | ident(c)
 | | | | | | int
 | list
 | list
 | | if
 | | | not
 | | | | ident(x)
 | | | list
 | | | | while
 | | | | | >
 | | | | | | not
 | | | | | | | intconst(3)
 | | | | | | intconst(4)
 | | | | | list
 | | | | | | if
 | | | | | | | or
 | | | | | | | | =
 | | | | | | | | | >
 | | | | | | | | | | intconst(0)
 | | | | | | | | | | -
 | | | | | | | | | | | -
 | | | | | | | | | | | | -
 | | | | | | | | | | | | | +
 | | | | | | | | | | | | | | ident(y)
 | | | | | | | | | | | | | | intconst(3)
 | | | | | | | | | ident(b)
 | | | | | | | | -
 | | | | | | | | | .
 | | | | | | | | | | .
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | ident(b)
 | | | | | | | list
 | | | | | | | | :=
 | | | | | | | | | .
 | | | | | | | | | | .
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | ident(b)
 | | | | | | | | | not
 | | | | | | | | | | .
 | | | | | | | | | | | .
 | | | | | | | | | | | | ident(b)
 | | | | | | | | | | | | ident(b)
 | | | | | | | | | | | ident(b)
 | | | | | | | | :=
 | | | | | | | | | ident(y)
 | | | | | | | | | +
 | | | | | | | | | | .
 | | | | | | | | | | | .
 | | | | | | | | | | | | ident(b)
 | | | | | | | | | | | | ident(b)
 | | | | | | | | | | | ident(c)
 | | | | | | | | | | [
 | | | | | | | | | | | ident(x)
 | | | | | | | | | | | ident(y)
 | | | | if
 | | | | | or
 | | | | | | =
 | | | | | | | not
 | | | | | | | | -
 | | | | | | | | | intconst(3)
 | | | | | | | -
 | | | | | | | | intconst(3)
 | | | | | | =
 | | | | | | | ident(x)
 | | | | | | | .
 | | | | | | | | ident(b)
 | | | | | | | | ident(x)
 | | | | | list
 | | | | | | :=
 | | | | | | | [
 | | | | | | | | ident(x)
 | | | | | | | | .
 | | | | | | | | | .
 | | | | | | | | | | [
 | | | | | | | | | | | ident(c)
 | | | | | | | | | | | intconst(1)
 | | | | | | | | | | ident(b)
 | | | | | | | | | ident(c)
 | | | | | | | +
 | | | | | | | | intconst(3)
 | | | | | | | | /
 | | | | | | | | | ident(y)
 | | | | | | | | | -
 | | | | | | | | | | *
 | | | | | | | | | | | intconst(3)
 | | | | | | | | | | | intconst(4)
 | | | | | | | | | | -
 | | | | | | | | | | | -
 | | | | | | | | | | | | intconst(2)
 | | | list
 | | | | :=
 | | | | | ident(y)
 | | | | | and
 | | | | | | or
 | | | | | | | >
 | | | | | | | | intconst(3)
 | | | | | | | | ident(x)
 | | | | | | | =
 | | | | | | | | ident(b)
 | | | | | | | | ident(b)
 | | | | | | =
 | | | | | | | ident(x)
 | | | | | | | .
 | | | | | | | | ident(b)
 | | | | | | | | ident(x)
 | | | | :=
 | | | | | ident(b)
 | | | | | not
 | | | | | | not
 | | | | | | | not
 | | | | | | | | or
 | | | | | | | | | .
 | | | | | | | | | | .
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | | ident(b)
 | | | | | | | | | | ident(b)
 | | | | | | | | | >
 | | | | | | | | | | ident(x)
 | | | | | | | | | | ident(c)
 | | | | :=
 | | | | | [
 | | | | | | ident(x)
 | | | | | | intconst(3)
 | | | | | /
 | | | | | | intconst(6)
 | | | | | | intconst(3)
 | | | | :=
 | | | | | [
 | | | | | | ident(x)
 | | | | | | intconst(2)
 | | | | | +
 | | | | | | [
 | | | | | | | .
 | | | | | | | | ident(b)
 | | | | | | | | ident(x)
 | | | | | | | intconst(3)
 | | | | | | .
 | | | | | | | [
 | | | | | | | | ident(c)
 | | | | | | | | intconst(0)
 | | | | | | | ident(c)
 | | | | :=
 | | | | | ident(x)
 | | | | | intconst(4)
 | | | | :=
 | | | | | [
 | | | | | | ident(b)
 | | | | | | intconst(3)
 | | | | | .
 | | | | | | ident(x)
 | | | | | | ident(x)


Type Checking:

L. 14: Field c already defined in the struct.
L. 17: Operator not with incompatible types.
L. 18: Operator not with incompatible types.
L. 18: Operator > with incompatible types.
L. 19: Operator + with incompatible types.
L. 19: Operator = with incompatible types.
L. 19: Operator - with incompatible types.
L. 19: Operator or with incompatible types.
L. 21: Operator [] with incompatible types.
L. 21: Operator + with incompatible types.
L. 21: Assignment with incompatible types.
L. 24: Operator not with incompatible types.
L. 24: Operator = with incompatible types.
L. 24: Operator = with incompatible types.
L. 25: Field b is not defined in the struct.
L. 25: Operator / with incompatible types.
L. 25: Assignment with incompatible types.
L. 28: Operator > with incompatible types.
L. 28: Operator = with incompatible types.
L. 28: Operator = with incompatible types.
L. 29: Operator > with incompatible types.
L. 29: Assignment with incompatible types.
L. 30: Assignment with incompatible types.
L. 31: Operator + with incompatible types.
L. 31: Assignment with incompatible types.
L. 32: Assignment with incompatible types.
L. 33: Operator array[] with incompatible types.
L. 33: Operator struct. with incompatible types.
There are errors: no code generated
