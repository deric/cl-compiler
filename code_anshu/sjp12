

  1: PROGRAM
  2:   VARS
  3: 	A ARRAY [2] OF Int
  4: 	B ARRAY [4] OF ARRAY [10] OF Int
  5:   ENDVARS
  6: 	Function p(Val X Int) Return Array [10] Of Int
  7:     	  Return B[X]
  8:         EndFunction
  9: 	Function r() Return Int
 10: 	  Return 3
 11: 	EndFunction  
 12: 	x[4].y:=1
 13: 	x.y[4]:=1
 14: 	x[((true))]:=4
 15: 	y:= x[((true))]
 16: 	-p(5)
 17: 	p:=p(5)
 18: 	x[4]:=p(5)
 19: 	x[-4].a[3]:=4
 20: 	r()
 21: 	r(1)
 22: 	m[3].u:= x[1][2][y+(a+4)]
 23: 	m[a].u[4].b.c:=4
 24: 	m[a[1]]:=4
 25: 	x[p(5)]:=y(2)
 26: 	a:=p(x[8]).y
 27: 	b:=p(f.y)[8]
 28: 	x:=p[p(x)]
 29: 	x:=p[p(x)].y
 30: 	b:=p(f.y)[8]
 31: 	b:=p(f.y)[8].a[3]
 32: 	b:=p(f.y)[8].a.b
 33: 	x:=y(a).b
 34: ENDPROGRAM
 35: 


program
    \__list
    |      \__ident(A)
    |      |        \__array
    |      |                \__intconst(2)
    |      |                \__int
    |      \__ident(B)
    |               \__array
    |                       \__intconst(4)
    |                       \__array
    |                               \__intconst(10)
    |                               \__int
    \__list
    |      \__function
    |      |          \__ident(p)
    |      |          |        \__list
    |      |          |        |      \__val
    |      |          |        |            \__ident(X)
    |      |          |        |            \__int
    |      |          |        \__array
    |      |          |                \__intconst(10)
    |      |          |                \__int
    |      |          \__list
    |      |          \__list
    |      |          \__list
    |      |          \__[
    |      |              \__ident(B)
    |      |              \__ident(X)
    |      \__function
    |                 \__ident(r)
    |                 |        \__list
    |                 |        \__int
    |                 \__list
    |                 \__list
    |                 \__list
    |                 \__intconst(3)
    \__list
           \__:=
           |    \__.
           |    |   \__[
           |    |   |   \__ident(x)
           |    |   |   \__intconst(4)
           |    |   \__ident(y)
           |    \__intconst(1)
           \__:=
           |    \__[
           |    |   \__.
           |    |   |   \__ident(x)
           |    |   |   \__ident(y)
           |    |   \__intconst(4)
           |    \__intconst(1)
           \__:=
           |    \__[
           |    |   \__ident(x)
           |    |   \__true
           |    \__intconst(4)
           \__:=
           |    \__ident(y)
           |    \__-
           |        \__[
           |        |   \__ident(x)
           |        |   \__true
           |        \__(
           |            \__ident(p)
           |            \__list
           |                   \__intconst(5)
           \__:=
           |    \__ident(p)
           |    \__(
           |        \__ident(p)
           |        \__list
           |               \__intconst(5)
           \__:=
           |    \__[
           |    |   \__ident(x)
           |    |   \__intconst(4)
           |    \__(
           |        \__ident(p)
           |        \__list
           |               \__intconst(5)
           \__:=
           |    \__[
           |    |   \__.
           |    |   |   \__[
           |    |   |   |   \__ident(x)
           |    |   |   |   \__-
           |    |   |   |       \__intconst(4)
           |    |   |   \__ident(a)
           |    |   \__intconst(3)
           |    \__intconst(4)
           \__(
           |   \__ident(r)
           |   \__list
           \__(
           |   \__ident(r)
           |   \__list
           |          \__intconst(1)
           \__:=
           |    \__.
           |    |   \__[
           |    |   |   \__ident(m)
           |    |   |   \__intconst(3)
           |    |   \__ident(u)
           |    \__[
           |        \__[
           |        |   \__[
           |        |   |   \__ident(x)
           |        |   |   \__intconst(1)
           |        |   \__intconst(2)
           |        \__+
           |            \__ident(y)
           |            \__+
           |                \__ident(a)
           |                \__intconst(4)
           \__:=
           |    \__.
           |    |   \__.
           |    |   |   \__[
           |    |   |   |   \__.
           |    |   |   |   |   \__[
           |    |   |   |   |   |   \__ident(m)
           |    |   |   |   |   |   \__ident(a)
           |    |   |   |   |   \__ident(u)
           |    |   |   |   \__intconst(4)
           |    |   |   \__ident(b)
           |    |   \__ident(c)
           |    \__intconst(4)
           \__:=
           |    \__[
           |    |   \__ident(m)
           |    |   \__[
           |    |       \__ident(a)
           |    |       \__intconst(1)
           |    \__intconst(4)
           \__:=
           |    \__[
           |    |   \__ident(x)
           |    |   \__(
           |    |       \__ident(p)
           |    |       \__list
           |    |              \__intconst(5)
           |    \__(
           |        \__ident(y)
           |        \__list
           |               \__intconst(2)
           \__:=
           |    \__ident(a)
           |    \__.
           |        \__(
           |        |   \__ident(p)
           |        |   \__list
           |        |          \__[
           |        |              \__ident(x)
           |        |              \__intconst(8)
           |        \__ident(y)
           \__:=
           |    \__ident(b)
           |    \__[
           |        \__(
           |        |   \__ident(p)
           |        |   \__list
           |        |          \__.
           |        |              \__ident(f)
           |        |              \__ident(y)
           |        \__intconst(8)
           \__:=
           |    \__ident(x)
           |    \__[
           |        \__ident(p)
           |        \__(
           |            \__ident(p)
           |            \__list
           |                   \__ident(x)
           \__:=
           |    \__ident(x)
           |    \__.
           |        \__[
           |        |   \__ident(p)
           |        |   \__(
           |        |       \__ident(p)
           |        |       \__list
           |        |              \__ident(x)
           |        \__ident(y)
           \__:=
           |    \__ident(b)
           |    \__[
           |        \__(
           |        |   \__ident(p)
           |        |   \__list
           |        |          \__.
           |        |              \__ident(f)
           |        |              \__ident(y)
           |        \__intconst(8)
           \__:=
           |    \__ident(b)
           |    \__[
           |        \__.
           |        |   \__[
           |        |   |   \__(
           |        |   |   |   \__ident(p)
           |        |   |   |   \__list
           |        |   |   |          \__.
           |        |   |   |              \__ident(f)
           |        |   |   |              \__ident(y)
           |        |   |   \__intconst(8)
           |        |   \__ident(a)
           |        \__intconst(3)
           \__:=
           |    \__ident(b)
           |    \__.
           |        \__.
           |        |   \__[
           |        |   |   \__(
           |        |   |   |   \__ident(p)
           |        |   |   |   \__list
           |        |   |   |          \__.
           |        |   |   |              \__ident(f)
           |        |   |   |              \__ident(y)
           |        |   |   \__intconst(8)
           |        |   \__ident(a)
           |        \__ident(b)
           \__:=
                \__ident(x)
                \__.
                    \__(
                    |   \__ident(y)
                    |   \__list
                    |          \__ident(a)
                    \__ident(b)


Type Checking:

L. 12: Identifier x is undeclared.
L. 12: Left expression of assignment is not referenceable.
L. 13: Identifier x is undeclared.
L. 13: Left expression of assignment is not referenceable.
L. 14: Identifier x is undeclared.
L. 14: Operator [] with incompatible types.
L. 14: Left expression of assignment is not referenceable.
L. 15: Identifier y is undeclared.
L. 15: Identifier x is undeclared.
L. 15: Operator [] with incompatible types.
L. 16: Operator - with incompatible types.
L. 15: Left expression of assignment is not referenceable.
L. 17: Left expression of assignment is not referenceable.
L. 18: Identifier x is undeclared.
L. 18: Left expression of assignment is not referenceable.
L. 19: Identifier x is undeclared.
L. 19: Left expression of assignment is not referenceable.
L. 20: Operator ( must be applied to a procedure in an instruction.
L. 21: Operator ( must be applied to a procedure in an instruction.
L. 21: The number of parameters in the call do not match.
L. 22: Identifier m is undeclared.
L. 22: Identifier x is undeclared.
L. 22: Identifier y is undeclared.
L. 22: Identifier a is undeclared.
L. 22: Left expression of assignment is not referenceable.
L. 23: Identifier m is undeclared.
L. 23: Identifier a is undeclared.
L. 23: Left expression of assignment is not referenceable.
L. 24: Identifier m is undeclared.
L. 24: Identifier a is undeclared.
L. 24: Left expression of assignment is not referenceable.
L. 25: Identifier x is undeclared.
L. 25: Operator [] with incompatible types.
L. 25: Identifier y is undeclared.
L. 25: Left expression of assignment is not referenceable.
L. 26: Identifier a is undeclared.
L. 26: Identifier x is undeclared.
L. 26: Operator struct. with incompatible types.
L. 26: Left expression of assignment is not referenceable.
L. 27: Identifier b is undeclared.
L. 27: Identifier f is undeclared.
L. 27: Left expression of assignment is not referenceable.
L. 28: Identifier x is undeclared.
L. 28: Identifier x is undeclared.
L. 28: Operator array[] with incompatible types.
L. 28: Operator [] with incompatible types.
L. 28: Left expression of assignment is not referenceable.
L. 29: Identifier x is undeclared.
L. 29: Identifier x is undeclared.
L. 29: Operator array[] with incompatible types.
L. 29: Operator [] with incompatible types.
L. 29: Left expression of assignment is not referenceable.
L. 30: Identifier b is undeclared.
L. 30: Identifier f is undeclared.
L. 30: Left expression of assignment is not referenceable.
L. 31: Identifier b is undeclared.
L. 31: Identifier f is undeclared.
L. 31: Operator struct. with incompatible types.
L. 31: Left expression of assignment is not referenceable.
L. 32: Identifier b is undeclared.
L. 32: Identifier f is undeclared.
L. 32: Operator struct. with incompatible types.
L. 32: Left expression of assignment is not referenceable.
L. 33: Identifier x is undeclared.
L. 33: Identifier y is undeclared.
L. 33: Left expression of assignment is not referenceable.
There are errors: no code generated
